name: Scaffold Checklist App

on:
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  scaffold:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js for the React frontend
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Scaffold React Frontend
        run: |
          mkdir -p frontend/src/pages frontend/src/components
          cd frontend

          # Initialize package.json and install dependencies
          npm init -y
          npm install react react-dom react-router-dom axios

          # Create the basic App.tsx file
          mkdir -p src
          cat <<EOL > src/App.tsx
          import React from "react";
          import { BrowserRouter as Router, Routes, Route } from "react-router-dom";
          import Dashboard from "./pages/Dashboard";
          import ChecklistDetails from "./pages/ChecklistDetails";

          function App() {
            return (
              <Router>
                <Routes>
                  <Route path="/" element={<Dashboard />} />
                  <Route path="/checklist/:id" element={<ChecklistDetails />} />
                </Routes>
              </Router>
            );
          }

          export default App;
          EOL

          # Create the Dashboard.tsx file
          cat <<EOL > src/pages/Dashboard.tsx
          import React from "react";

          function Dashboard() {
            return (
              <div>
                <h1>Checklist Dashboard</h1>
                <p>This is the starting point for displaying all checklists.</p>
              </div>
            );
          }

          export default Dashboard;
          EOL

          # Create the ChecklistDetails.tsx file
          cat <<EOL > src/pages/ChecklistDetails.tsx
          import React from "react";

          function ChecklistDetails() {
            return (
              <div>
                <h1>Checklist Details</h1>
                <p>Details for a specific checklist will be displayed here.</p>
              </div>
            );
          }

          export default ChecklistDetails;
          EOL

      # Step 3: Set up .NET Core for the backend
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0

      - name: Scaffold ASP.NET Core Backend
        run: |
          mkdir backend
          cd backend
          dotnet new webapi -o .

          # Create the ChecklistsController.cs file
          cat <<EOL > Controllers/ChecklistsController.cs
          using Microsoft.AspNetCore.Mvc;

          namespace ChecklistApp.Controllers
          {
              [ApiController]
              [Route("api/[controller]")]
              public class ChecklistsController : ControllerBase
              {
                  [HttpGet]
                  public IActionResult GetChecklists()
                  {
                      return Ok(new { message = "List of checklists" });
                  }

                  [HttpPost]
                  public IActionResult CreateChecklist()
                  {
                      return Ok(new { message = "Checklist created" });
                  }
              }
          }
          EOL

          # Create the TasksController.cs file
          cat <<EOL > Controllers/TasksController.cs
          using Microsoft.AspNetCore.Mvc;

          namespace ChecklistApp.Controllers
          {
              [ApiController]
              [Route("api/[controller]")]
              public class TasksController : ControllerBase
              {
                  [HttpGet]
                  public IActionResult GetTasks()
                  {
                      return Ok(new { message = "List of tasks" });
                  }

                  [HttpPost]
                  public IActionResult CreateTask()
                  {
                      return Ok(new { message = "Task created" });
                  }
              }
          }
          EOL

          # Create the UsersController.cs file
          cat <<EOL > Controllers/UsersController.cs
          using Microsoft.AspNetCore.Mvc;

          namespace ChecklistApp.Controllers
          {
              [ApiController]
              [Route("api/[controller]")]
              public class UsersController : ControllerBase
              {
                  [HttpGet]
                  public IActionResult GetUsers()
                  {
                      return Ok(new { message = "List of users" });
                  }

                  [HttpPost]
                  public IActionResult CreateUser()
                  {
                      return Ok(new { message = "User created" });
                  }
              }
          }
          EOL

      # Step 4: Commit and push changes to a new branch
      - name: Commit and Push Changes
        run: |
          git config --local user.name "GitHub Actions"
          git config --local user.email "actions@github.com"
          git checkout -b scaffold
          git add .
          git commit -m "Scaffold React frontend and ASP.NET Core backend"
          git push origin scaffold